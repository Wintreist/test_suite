#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ test-suite-executor
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –û–° –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏
"""

import os
import sys
import subprocess
import platform


def main():
    print("=" * 50)
    print("  –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ test-suite-executor")
    print("=" * 50)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    system = platform.system().lower()
    print(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: {platform.system()} ({platform.machine()})")
    print()
    
    if system == "windows":
        print("ü™ü –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –¥–ª—è Windows...")
        script = "build_windows.bat"
        try:
            result = subprocess.run([script], shell=True, check=True)
            print("‚úÖ –°–±–æ—Ä–∫–∞ Windows –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Windows: {e}")
            sys.exit(1)
            
    elif system == "linux":
        print("üêß –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –¥–ª—è Linux...")
        script = "./build_linux.sh"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π
        if not os.access("build_linux.sh", os.X_OK):
            print("–î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º...")
            os.chmod("build_linux.sh", 0o755)
            
        try:
            result = subprocess.run([script], check=True)
            print("‚úÖ –°–±–æ—Ä–∫–∞ Linux –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Linux: {e}")
            sys.exit(1)
            
    elif system == "darwin":
        print("üçé macOS –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
        print("–ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Linux —Å–∫—Ä–∏–ø—Ç...")
        script = "./build_linux.sh"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π
        if not os.access("build_linux.sh", os.X_OK):
            print("–î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º...")
            os.chmod("build_linux.sh", 0o755)
            
        try:
            result = subprocess.run([script], check=True)
            print("‚úÖ –°–±–æ—Ä–∫–∞ macOS –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ macOS: {e}")
            sys.exit(1)
            
    else:
        print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –û–°: {system}")
        print("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: Windows, Linux, macOS")
        sys.exit(1)
    
    print()
    print("=" * 50)
    print("üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    dist_dir = "dist"
    if os.path.exists(dist_dir):
        print("–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        for file in os.listdir(dist_dir):
            file_path = os.path.join(dist_dir, file)
            if os.path.isfile(file_path):
                size = os.path.getsize(file_path)
                print(f"  üì¶ {file} ({size // (1024*1024)} MB)")
    
    print()
    if system == "windows":
        print("–ó–∞–ø—É—Å–∫: .\\dist\\test-suite-executor.exe")
    else:
        print("–ó–∞–ø—É—Å–∫: ./dist/test-suite-executor")


if __name__ == "__main__":
    main()